*** THIS FILE CONTAINS SOME LOGIC FOR EACH OF THE COMPONENTS IN THIS TIP SHARING APP 



COMPONENTS: 

LIST OF ITEMS--
    Staff Group -- cols. == Hours - TIP - TIP - NET - earngs p/hr - gross pay - % of pay
      staff member - **hours hard coded state

1. DAILY TIP ENTRY 
    cash tip state
    credit card tip state

    total tip state 



  
2.  ** DATA FILES to simulate a database. 
    
** use random number generator for hours state (in lieu of unique values for employee hours)- to return all values to (2) decimal places between 4 and 8.29 - after these values are set then run 
a refresh of the computations for each of the cols. for each staff member

  a.File of employees:
    Employees should all be listed in a file that can be written to. They 
    should an array of objects with the keys: last name, first name, and pay rate for the 
    purposes of this application. 
    This array of objects should be sorted, and then resorted with any update or addition 
    of more objects. 

    File of tip entries: 
      In this file, which can be named as a month of the year and represent each day and week, a variable tipEntries as an array of arrays, where the first index of each array is the Last and First name of the employee, with the second index being an array. example:
      
      let dailyEntries = [
          ["Alice", [1, 2, 3, 4, 5, 6, 7, **this index is the sum of the preceding indices]],
          ["Bob", [1, 2, 3, 4, 5, 6, 7],[],[],[]],
          ["John", [1, 2, 3, 4, 5, 6, 7],[],[],[]]
      ];
      
      
      Any time an employee object is created, a new array should be made and a quick sort function should place the new empty object in the appropriate alphabatized place, and the newly created
      daily entries array should be written to this file. Another utiliy function should create the correct number of weekly arrays based on simple math operators using increments of seven-- 
      try this: Math.floor((days in the current month / 7) + 2) * [],  and assign the last index 
      of each array using the reducer method, and then pushing that value to the array. The very final array holds the monthly total for each employee

    b.File of employee hours

      same as above, but with a variable named:

      let dailyHours = [
        ["name", [],[]],
        ["name", [],[]]
      ]

    c. Continue for any potential new dataset 
3.